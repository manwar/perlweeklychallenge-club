%!PS

% begin included library code
% see https://codeberg.org/Firedrake/postscript-libraries/
/enumerate.array {
    1 dict begin
    /a exch def
    [
      0 1 a length 1 sub {
          [ exch dup a exch get ]
      } for
    ]
    end
} bind def

/test {
    /test.count test.count 1 add def
    {
        /test.pass test.pass 1 add def
    } {
        ( ) print
        test.count (....) cvs print
        (-fail) print
    } ifelse
} bind def

/test.start {
    print (:) print
    /test.pass 0 def
    /test.count 0 def
} bind def

/test.end {
    ( ) print
    test.count 0 gt {
        (Passed ) print
        test.pass (...) cvs print
        (/) print
        test.count (...) cvs print
        ( \() print
        test.pass 100 mul test.count idiv (...) cvs print
        (%\)) print
        (\r\n) print
    } if
} bind def


% end included library code

/semiorderedpermutation {
    0 dict begin
    /a exch def
    /en a length def
    /s 1 def
    /e en 1 sub def
    a enumerate.array {
        aload pop
        /n exch def
        /i exch def
        n 1 eq {
            /s i def
        } if
        n en eq {
            /e i def
        } if
    } forall
    s en 1 sub e sub add
    s e gt {
        1 sub
    } if
    end
} bind def

(semiorderedpermutation) test.start
[2 1 4 3] semiorderedpermutation 2 eq test
[2 4 1 3] semiorderedpermutation 3 eq test
[1 3 2 4 5] semiorderedpermutation 0 eq test
test.end
