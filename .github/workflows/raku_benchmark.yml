# gh workflow run 'raku_benchmark' --ref branch-name -f week=DEMO -f maxproblem=6
# gh workflow run 'raku_benchmark' --ref raku-benchmark-scaleability -f week=nr233 -f maxproblem=10

name: raku_benchmark

env:
  TMP: /tmp/

# ensure only one job runs for this repo
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  #push: #  if workflow is not appearing on branch, run with push: instead of workflow_dispatch: once
  schedule:
#    - cron: '39 5 * * 1' # Monday morning
    - cron: '39 5 * * *' # every morning
  workflow_dispatch:
    inputs:
      week:
        description: 'weekly challenge nr to run benchmark on - like nr234 or DEMO'
        required: false
        type: string
      maxproblem:
        description: 'how many iterations do we allow ... (before server runs out of memory)'
        default: 10
        required: true
        type: integer
      maxruntimes:
        description: 'list of seconds to run - default is run for 1 sec and for 3 sec'
        default: '1,3'
        required: true
        type: string

jobs:
  raku-benchmark:
    
    #strategy:
    #  matrix:
    #    os:
    #      - ubuntu-latest
    #      - windows-latest
    #      - macos-latest
    #    raku-version:
    #      - 'latest'
    #runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    
    steps:
      # install https://rakudo.org/star
      # see https://github.com/rakudo/star/blob/master/etc/modules.txt 
      # for modules installed by rakudo-star
      - uses: Raku/setup-raku@v1
#        with:
#          raku-version: ${{ matrix.raku-version }}

      - name: Install additional modules
        run: zef --verbose install JSON::Tiny Text::Table::Simple
      
      - uses: actions/checkout@main

      - name: Set default values for parameters
        id: parameter
        run: |
          LATEST_CHALLENGE=`raku -e "put '.'.IO.dir.grep(/challenge\-nr\d+/).sort.tail.substr(*-5)"`
          WEEK=${{ github.event.inputs.week || '' }}
          MAXPR=${{ github.event.inputs.maxproblem || '20' }}
          MAXRT=${{ github.event.inputs.maxruntimes || '1,3' }}
          echo "maxproblem=$MAXPR" >> "$GITHUB_OUTPUT"
          echo "maxruntimes=$MAXRT" >> "$GITHUB_OUTPUT"
          echo "week=${WEEK:-$LATEST_CHALLENGE}" >> "$GITHUB_OUTPUT"

      - name: Install user required modules
        run: raku test/install-required-packages.raku challenge-${{ steps.parameter.outputs.week }} False
      
      - name: Run benchmark
        run: raku --optimize=3 -I challenge-${{ steps.parameter.outputs.week }} -- test/benchmark-scalability.raku --out-folder=${{ github.env.TMP }} --v=True --max-problem={{ steps.parameter.outputs.maxproblem }} --max-run-times={{ steps.parameter.outputs.maxruntimes }} ${{ steps.parameter.outputs.week }}
      
      - name: Archive benchmark results
        uses: actions/upload-artifact@main
        with:
          name: scalability-benchmark-data
          path: ${{ github.env.TMP }}${{ steps.parameter.outputs.week }}_*.csv