# gh workflow run 'manual raku benchmark run' --ref branch-name -f week=DEMO -f maxproblem=6
# gh workflow run 'manual raku benchmark run' --ref raku-benchmark-scaleability -f week=nr233 -f maxproblem=10

name: manual raku benchmark run

on:
  #push: # if workflow is not appearing on branch, run with push: instead of workflow_dispatch: once
  workflow_dispatch:
    inputs:
      week:
        description: 'weekly challenge nr to run benchmark on - like nr234'
        default: 'DEMO'
        required: true
        type: string
      maxproblem:
        description: 'how many iterations do we allow ... (before server runs out of memory)'
        default: 5
        required: true
        type: integer
jobs:
  scalability-benchmark-and-tokei:
    #strategy:
    #  matrix:
    #    os:
    #      - ubuntu-latest
    #    raku-version:
    #      - 'latest'
    #runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Raku
        run: |
          sudo echo $SHELL
          sudo apt-get update
          sudo apt-get install rakudo
          sudo raku --version
      - name: Install zef and some modules always needed
        run: |
          sudo git clone https://github.com/ugexe/zef.git; cd zef; sudo raku -I. bin/zef install . ; cd .. ; sudo rm -rf zef/
          sudo /usr/lib/perl6/site/bin/zef install Test JSON::Tiny
      - name: Install user required modules and run benchmark
        run: |
          sudo raku test/install-required-packages.raku challenge-${{ inputs.week }} False
          sudo raku --optimize=3 -I challenge-${{ inputs.week }} -- test/benchmark-scalabiity.raku --out-folder=/tmp --v=True --max-problem=${{ inputs.maxproblem }} --max-run-times=1,2,3 ${{ inputs.week }}
      - name: Archive benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: scalability-benchmark-data
          path: /tmp/${{ inputs.week }}_*.csv
      - name: Install and run Tokei
        run: |
          sudo wget -qO tokei.tar.gz https://github.com/XAMPPRocky/tokei/releases/latest/download/tokei-x86_64-unknown-linux-gnu.tar.gz
          sudo tar xf tokei.tar.gz -C /usr/local/bin
          tokei --version
          tokei -f challenge-${{ inputs.week }} > /tmp/challenge-${{ inputs.week }}.tokei.txt
      - name: Archive Tokei report
        uses: actions/upload-artifact@v3
        with:
          name: tokei-stats-report
          path: /tmp/challenge-${{ inputs.week }}.tokei.txt