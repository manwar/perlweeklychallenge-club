# gh workflow run 'manual raku benchmark run' --ref branch-name -f week=DEMO -f maxproblem=6
# gh workflow run 'manual raku benchmark run' --ref raku-benchmark-scaleability -f week=nr233 -f maxproblem=10

name: manual raku benchmark run

# ensure only one job runs for this repo
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  #push: #  if workflow is not appearing on branch, run with push: instead of workflow_dispatch: once
  workflow_dispatch:
    inputs:
      week:
        description: 'weekly challenge nr to run benchmark on - like nr234'
        default: 'DEMO'
        required: true
        type: string
      maxproblem:
        description: 'how many iterations do we allow ... (before server runs out of memory)'
        default: 5
        required: true
        type: integer
jobs:
  scalability-benchmark-and-tokei:
    
    #strategy:
    #  matrix:
    #    os:
    #      - ubuntu-latest
    #      - windows-latest
    #      - macos-latest
    #    raku-version:
    #      - 'latest'
    #runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    
    steps:
      # install https://rakudo.org/star
      # see https://github.com/rakudo/star/blob/master/etc/modules.txt 
      # for modules installed by rakudo-star
      - uses: Raku/setup-raku@v1
#        with:
#          raku-version: ${{ matrix.raku-version }}

      - name: Install additional modules
        run: zef --verbose install JSON::Tiny
      
      - uses: actions/checkout@main
      
      - name: Install user required modules
        run: raku test/install-required-packages.raku challenge-${{ inputs.week }} False
      
      - name: Run benchmark
        run: raku --optimize=3 -I challenge-${{ inputs.week }} -- test/benchmark-scalability.raku --out-folder=/tmp --v=True --max-problem=${{ inputs.maxproblem }} --max-run-times=1,2,3 ${{ inputs.week }}
      
      - name: Archive benchmark results
        uses: actions/upload-artifact@main
        with:
          name: scalability-benchmark-data
          path: /tmp/${{ inputs.week }}_*.csv
      
      - name: Setup cache for Tokei
        id: cache-tokei
        uses: actions/cache@v3
        with:
          path: ~/.local/bin
          key: ${{ runner.os }}-tokei
      
      - name: Install Tokei
        if: steps.cache-tokei.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.local/bin
          wget -qO tokei.tar.gz https://github.com/XAMPPRocky/tokei/releases/latest/download/tokei-x86_64-unknown-linux-gnu.tar.gz
          tar xf tokei.tar.gz -C ~/.local/bin
          tokei --version
      
      - name: Run Tokei
        run: |
          tokei -f --columns=130 challenge-${{ inputs.week }}
          tokei -f --output json challenge-${{ inputs.week }} > /tmp/challenge-${{ inputs.week }}.tokei.txt
      
      - name: Archive Tokei report
        uses: actions/upload-artifact@main
        with:
          name: tokei-stats-report
          path: /tmp/challenge-${{ inputs.week }}.tokei.txt