%!PS

% begin included library code
% see https://codeberg.org/Firedrake/postscript-libraries/
/a2s {
    2 dict begin
    /i exch def
    i length dup string /o exch def
    1 sub 0 exch 1 exch {
        dup i 3 -1 roll get o 3 1 roll put
    } for
    o
    end
} bind def

/test {
    /test.count test.count 1 add def
    {
        /test.pass test.pass 1 add def
    } {
        ( ) print
        test.count (....) cvs print
        (-fail) print
    } ifelse
} bind def

/test.start {
    print (:) print
    /test.pass 0 def
    /test.count 0 def
} bind def

/enumerate.array {
    1 dict begin
    /a exch def
    [
      0 1 a length 1 sub {
          [ exch dup a exch get ]
      } for
    ]
    end
} bind def

/tolower {
    s2a
    [ exch
      {
          dup dup 65 ge exch 90 le and {
              32 add
          } if
      } forall
    ] a2s
} bind def

/s2a {
    [ exch { } forall ]
} bind def

/test.end {
    ( ) print
    test.count 0 gt {
        (Passed ) print
        test.pass (...) cvs print
        (/) print
        test.count (...) cvs print
        ( \() print
        test.pass 100 mul test.count idiv (...) cvs print
        (%\)) print
        (\r\n) print
    } if
} bind def


% end included library code

/changingkeys {
    0 dict begin
    /oc 0 def
    /out 0 def
    tolower s2a enumerate.array {
        aload pop
        /c exch def
        /i exch def
        i 0 eq {
            /oc c def
        } {
            c oc ne {
                /oc c def
                /out out 1 add def
            } if
        } ifelse
    } forall
    out
    end
} bind def

(changingkeys) test.start
(pPeERrLl) changingkeys 3 eq test
(rRr) changingkeys 0 eq test
(GoO) changingkeys 1 eq test
test.end
