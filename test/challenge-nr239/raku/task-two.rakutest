#!/usr/bin/env raku
#BEGIN %*ENV<RAKU_TEST_DIE_ON_FAIL> = 1;
#BEGIN %*ENV<AUTHOR_TESTING> = 1;

use Test;
use task-two;

my @testcases =
  ("ab", ("ad", "bd", "aaab", "baa", "badab"))  => 2, # Strings "aaab" and "baa" are consistent since they only contain characters 'a' and 'b'.
  ("abc", ("a", "b", "c", "ab", "ac", "bc", "abc"))  => 7,
  ("cad", ("cc", "acd", "b", "ba", "bac", "bad", "ac", "d"))  => 4, # Strings "cc", "acd", "ac", and "d" are consistent.
;

plan @testcases.elems;
cmp-ok solution(.key), &[eqv], .value for @testcases;

if ?%*ENV<AUTHOR_TESTING> {
  for @testcases.keys -> $i {
    my ($input, $output) = @testcases[$i].kv;
    say $i + 1 ~ '. testcase';
    isa-ok $input, List, 'domain data structure';
    ok all($input) ~~ Str|List, 'domain value';
    isa-ok $output, Int, 'co-domain data structure';
    ok all($output) ~~ Int, 'co-domain value';    
  }
}