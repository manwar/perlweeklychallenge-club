#!/usr/bin/env raku
#BEGIN %*ENV<RAKU_TEST_DIE_ON_FAIL> = 1;
#BEGIN %*ENV<AUTHOR_TESTING> = 1;

use Test;
use task-two;

my @testcases =
  (0).List => 1,
  (1,2,3) => 0,
  (1,2,0) => 1,
  (4,6,3,8,15,0,13,18,7,16,14,19,17,5,11,1,12,2,9,10) => 3,
  (0,1,13,7,6,8,10,11,2,14,16,4,12,9,17,5,3,18,15,19) => 6,
  (9,8,3,11,5,7,13,19,12,4,14,10,18,2,16,1,0,15,6,17) => 1
;

plan @testcases.elems;
cmp-ok solution(.key), &[eqv], .value for @testcases;

if ?%*ENV<AUTHOR_TESTING> {
  for @testcases.keys -> $i {
    my ($input, $output) = @testcases[$i].kv;
    say $i + 1 ~ '. testcase';
    isa-ok $input, List, 'domain data structure';
    ok all($input) ~~ Int, 'domain value';
    isa-ok $output, UInt, 'co-domain data structure';
    ok all($output) ~~ UInt, 'co-domain value';    
  }
}