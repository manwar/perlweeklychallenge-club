#!/usr/bin/env raku
#BEGIN %*ENV<RAKU_TEST_DIE_ON_FAIL> = 1;
#BEGIN %*ENV<AUTHOR_TESTING> = 1;

use Test;
use task-two;

#Prime factors of 11 => 11
#Prime factors of  4 => 2, 2
#Prime factors of  8 => 2, 2, 2
#Prime factors of 27 => 3, 3, 3

my @testcases =
  (11, 8, 27, 4) => (11, 4, 8, 27),
;

plan @testcases.elems;
is-deeply solution(.key), .value for @testcases;

if ?%*ENV<AUTHOR_TESTING> {
  for @testcases.keys -> $i {
    my ($input, $output) = @testcases[$i].kv;
    say $i + 1 ~ '. testcase';
    isa-ok $input, List, 'domain data structure';
    ok all($input) ~~ Int, 'domain value';
    isa-ok $output, List, 'co-domain data structure';
    ok all($output) ~~ Int, 'co-domain value';    
  }
}